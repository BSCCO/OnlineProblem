//用栈实现队列 查看运行结果
//
//正如标题所述，你需要使用两个栈来实现队列的一些操作。
//
//队列应支持push(element)，pop() 和 top()，其中pop是弹出队列中的第一个(最前面的)元素。
//
//pop和top方法都应该返回第一个元素的值。
//
//样例
//比如push(1), pop(), push(2), push(3), top(), pop()，你应该返回1，2和2
//
//挑战
//仅使用两个栈来实现它，不使用任何其他数据结构，push，pop 和 top的复杂度都应该是均摊O(1)的

#include<stack>

using std::stack;
class Queue {
public:
	stack<int> stack1;
	stack<int> stack2;

	Queue() {
		// do intialization if necessary
	}

	//入队时，将元素压入s1。
	void push(int element) {
		stack1.push(element);
	}

	//出队时，判断s2是否为空，如不为空，则直接弹出顶元素；如为空，则将s1的元素逐个“倒入”s2，把最后一个元素弹出并出队。
	int pop() {
		if (stack2.empty()) {
			while (!stack1.empty()) {
				int ele = stack1.top();
				stack2.push(ele);
				stack1.pop();
			}
		}
		int top = stack2.top();
		stack2.pop();
		return top;
	}

	int top() {
		if (stack2.empty()) {
			while (!stack1.empty()) {
				int ele = stack1.top();
				stack2.push(ele);
				stack1.pop();
			}
		}
		return stack2.top();
	}
};